{"version":3,"sources":["free-cell.js"],"names":["vm","Vue","el","data","gameTime","timer","isPlaying","showModal","panelCode","options","success","fail","currentPanel","deckHolder","deckDone","deckUnorder","ignoreCardId","ondragCardId","ondragDeckName","ondragDeckIndex","ondropDeckName","ondropDeckIndex","returnSteps","computed","displayTime","minute","Math","floor","toString","padStart","second","methods","shuffle","arr","i","length","j","random","generateRandomCards","cardArr","Array","from","map","card","index","shuffleCards","forEach","cardId","indexOf","splice","push","shift","findCardPattern","ceil","displayCardParttern","deckIndex","cardNumber","cardPattern","ondragStart","deckName","ondragEnter","e","preventDefault","ondragEnd","pop","doneDeck","lastDoneDeckCardId","dropUnorderDeck","lastUnorderDeckCardId","dragUnorderDeck","dragCardColorIndex","unorderDeckCardColorIndex","numberCompare","startGame","switchPanel","countTime","pauseGame","continueGame","restartGame","resetAllData","setTimeout","clearInterval","returnGameSteps","alert","lastStep","setInterval","config","aniCardEnter","delay","dataset","style","animationDelay","classList","add","handleAnimationEnd","remove","removeEventListener","addEventListener","created"],"mappings":"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","file":"free-cell.js","sourcesContent":["/**\n * 牌號規則\n * 愛心 - 1~13\n * 梅花 - 14~26\n * 黑桃 - 27~39\n * 方塊 - 40~52\n*/\nconst vm = new Vue({\n  el: '#app',\n  data: {\n    gameTime: 1000*60*1,\n    timer: null,\n    isPlaying: false,\n    showModal: true,\n    panelCode: {\n      options: 1,\n      success: 2,\n      fail: 3,\n    },\n    currentPanel: 0,\n    deckHolder: [0, 0, 0, 0],\n    deckDone: [[1], [14], [27], [40]],\n    deckUnorder: [[], [], [], [], [], [], [], []],\n    ignoreCardId: [1, 14, 27, 40],\n    ondragCardId: null,\n    ondragDeckName: null,\n    ondragDeckIndex: null,\n    ondropDeckName: null,\n    ondropDeckIndex: null,\n    returnSteps: [],\n  },\n  computed: {\n    displayTime() {\n      const minute = Math.floor(this.gameTime/1000/60).toString().padStart(2,0);\n      const second = Math.floor((this.gameTime - minute*60*1000)/1000).toString().padStart(2,0);\n      return `${minute}:${second}`;\n    },\n  },\n  methods: {\n    shuffle(arr) {\n      for(let i = arr.length - 1; i >= 0; i--) {\n        let j = Math.floor(Math.random() * (i + 1));\n        [arr[i], arr[j]] = [arr[j], arr[i]];\n      }\n      return arr;\n    },\n    generateRandomCards() {\n      const cardArr = Array.from(new Array(52))\n        .map((card, index) => index + 1);\n      const shuffleCards = this.shuffle(cardArr);\n      this.ignoreCardId.forEach((cardId, i) => {\n        if (shuffleCards.indexOf(cardId) !== -1) {\n          shuffleCards.splice(shuffleCards.indexOf(cardId), 1);\n        }\n      });\n      for(let i = 0; i < this.deckUnorder.length; i++) {\n        for(let j = 0; j < 6; j++) {\n          this.deckUnorder[i].push(shuffleCards.shift());\n        }\n      }\n    },\n    findCardPattern(cardId) {\n      const index = Math.ceil(cardId / 13);\n      switch (index) {\n        case 1:\n          return 'heart';\n        case 2:\n          return 'club';\n        case 3:\n          return 'spade';\n        case 4:\n          return 'diamond';\n        default:\n          return;\n      }\n    },\n    displayCardParttern(cardId, deckIndex) {\n      let cardNumber = cardId % 13;\n      if (cardNumber === 0) cardNumber = 13;\n      const cardPattern = this.findCardPattern(cardId);\n      return `./img/2nd-week2/${cardPattern}-${cardNumber}.png`;\n    },\n    ondragStart(cardId, deckIndex, deckName) {\n      // 清空上一回的 drop 內容\n      this.ondropDeckName = null;\n      this.ondropDeckIndex = null;\n      this.ondragCardId = cardId;\n      this.ondragDeckIndex = deckIndex;\n      this.ondragDeckName = deckName;\n      // console.log('ondragStart');\n    },\n    ondragEnter(e, deckIndex, deckName) {\n      e.preventDefault();\n      this.ondropDeckName = deckName;\n      this.ondropDeckIndex = deckIndex;\n      // console.log(this.ondropDeckName, this.ondropDeckIndex);\n      // console.log('ondragEnter');\n    },\n    ondragEnd(e, cardId, deckIndex) {\n      e.preventDefault();\n      // 狀況一: unorder 移動到 holder\n      if (this.ondropDeckName === 'deckHolder') {\n        if (this.deckHolder[this.ondropDeckIndex] !== 0) return;\n        this.deckHolder.splice(this.ondropDeckIndex, 1, this.ondragCardId);\n        this.deckUnorder[this.ondragDeckIndex].pop();\n      }\n      // 狀況二: unorder 或 holder 移動到 done\n      else if (this.ondropDeckName === 'deckDone') {\n        const doneDeck = this.deckDone[this.ondropDeckIndex];\n        const lastDoneDeckCardId = doneDeck[doneDeck.length - 1];\n        if (this.ondragCardId !== lastDoneDeckCardId + 1) return;\n        doneDeck.push(this.ondragCardId);\n        if (this.ondragDeckName === 'deckHolder') {\n          this[this.ondragDeckName].pop();\n        } else {\n          this[this.ondragDeckName][this.ondragDeckIndex].pop();\n        }\n      }\n      // 狀況三: unorder 移動到 unorder\n      else if (this.ondropDeckName === 'deckUnorder') {\n        const dropUnorderDeck = this.deckUnorder[this.ondropDeckIndex];\n        const lastUnorderDeckCardId = dropUnorderDeck[dropUnorderDeck.length - 1];\n        const dragUnorderDeck = this.deckUnorder[this.ondragDeckIndex];\n        // 比對大小及顏色\n        const dragCardColorIndex = Math.ceil(this.ondragCardId / 13);\n        const unorderDeckCardColorIndex = Math.ceil(lastUnorderDeckCardId / 13);\n        const numberCompare = (this.ondragCardId % 13) === (lastUnorderDeckCardId % 13) - 1 || (this.ondragCardId % 13) === (lastUnorderDeckCardId % 13) + 12;\n        if ( (dragCardColorIndex + unorderDeckCardColorIndex !== 5)\n          && dragCardColorIndex !== unorderDeckCardColorIndex\n          && numberCompare ) {\n          dropUnorderDeck.push(this.ondragCardId);\n          dragUnorderDeck.pop();\n        }\n      }\n      this.returnSteps.push({\n        ondragCardId: this.ondragCardId,\n        ondragDeckName: this.ondragDeckName,\n        ondragDeckIndex: this.ondragDeckIndex,\n        ondropDeckName: this.ondropDeckName,\n        ondropDeckIndex: this.ondropDeckIndex,\n      });\n    },\n    startGame() {\n      this.switchPanel({\n        isPlaying: true,\n        showModal: false,\n      });\n      this.countTime();\n    },\n    pauseGame() {\n      this.switchPanel({\n        isPlaying: false,\n        showModal: true,\n        currentPanel: this.panelCode.options,\n      });\n    },\n    continueGame() {\n      this.switchPanel({\n        isPlaying: true,\n        showModal: false,\n      });\n    },\n    restartGame() {\n      this.resetAllData();\n      setTimeout(() => {\n        this.generateRandomCards();\n      }, 400);\n      this.countTime();\n      this.showModal = false;\n      this.isPlaying = true;\n    },\n    resetAllData() {\n      this.gameTime = 1000*60*30;\n      this.deckHolder = [0, 0, 0, 0];\n      this.deckDone = [[1], [14], [27], [40]];\n      this.deckUnorder = [[], [], [], [], [], [], [], []];\n      this.ondragCardId = null;\n      this.ondragDeckIndex = null;\n      this.ondropDeckName = null;\n      this.ondropDeckIndex = null;\n      this.returnSteps = [];\n      clearInterval(this.timer);\n      this.timer = null;\n    },\n    returnGameSteps() {\n      if (this.returnSteps.length === 0) {\n        alert('No more step return.');\n      } else {\n        const lastStep = this.returnSteps.pop();\n        if (lastStep.ondragDeckName === 'deckHolder') {\n          this[lastStep.ondragDeckName].splice(lastStep.ondragDeckIndex, 1, lastStep[ondragCardId]);\n        } else {\n          this[lastStep.ondragDeckName][lastStep.ondragDeckIndex].push(lastStep.ondragCardId);\n        }\n        if (lastStep.ondropDeckName === 'deckHolder') {\n          this[lastStep.ondropDeckName].splice(lastStep.ondropDeckIndex, 1, 0);\n        } else {\n          this[lastStep.ondropDeckName][lastStep.ondropDeckIndex].pop();\n        }\n      }\n    },\n    countTime() {\n      this.timer = setInterval(() => {\n        if (this.gameTime <= 0) {\n          this.switchPanel({\n            isPlaying: false,\n            showModal: true,\n            currentPanel: this.panelCode.fail\n          });\n          clearInterval(this.timer);\n          return;\n        }\n        if (this.isPlaying) {\n          this.gameTime -= 1000;\n        }\n      }, 1000);\n    },\n    switchPanel(config) {\n      this.currentPanel = config.currentPanel || 0;\n      this.isPlaying = config.isPlaying;\n      this.showModal = config.showModal;\n    },\n    aniCardEnter(el) {\n      const delay = el.dataset.index * 100;\n      el.style.animationDelay = `${delay/1000}s`;\n      el.classList.add('animated', 'fadeInUp');\n      function handleAnimationEnd() {\n        el.classList.remove('animated', 'fadeInUp');\n        el.removeEventListener('animationend', handleAnimationEnd);\n      }\n      el.addEventListener('animationend', handleAnimationEnd);\n    },\n  },\n  created() {\n    // 產生隨機 unorder 牌組\n    this.generateRandomCards();\n  }\n});"]}