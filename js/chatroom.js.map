{"version":3,"sources":["chatroom.js"],"names":["vm","routeMapping","index","setUserData","roomLobby","chatRoom","firebaseConfig","apiKey","authDomain","databaseURL","firebase","initializeApp","database","app","Vue","use","EmojiPicker","$","el","data","currentRoute","inValid","isMaskOpen","isMenuOpen","maskTitle","controlTransition","enter","leave","userData","username","userdate","usergender","inputStatus","getUsername","getUserdate","getUsergender","setUsernameDialogs","target","text","chatRoomDialogs","roomList","newRoomData","name","description","currentRoomData","chatData","search","input","imageUrl","filters","formatTime","timeStamp","hours","Date","getHours","toString","padStart","minutes","getMinutes","watch","val","setTimeout","$refs","chatRoomList","scrollTo","scrollHeight","methods","initialUserData","validateAndGoRoute","routeNum","changeTransition","submitUserData","type","push","showRoomCommentAmount","room","Object","keys","length","toggleMenu","goChatRoom","listenRoomData","roomId","id","createNewRoom","isAble","key","roomData","getTime","writeRoomsData","appendEmoji","emoji","addChat","writeRoomData","modal","listenRoomsData","roomRef","ref","on","snapshot","set","created"],"mappings":"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","file":"chatroom.js","sourcesContent":["let vm = null;\r\nconst routeMapping = {\r\n  index: 1,\r\n  setUserData: 2,\r\n  roomLobby: 3,\r\n  chatRoom: 4,\r\n};\r\n// Firebase configuration\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyA4P_r_EK-DXuXETYaSsVybrChSCI25FFs\",\r\n  authDomain: \"chatroom-52faa.firebaseapp.com\",\r\n  databaseURL: \"https://chatroom-52faa.firebaseio.com\",\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\nconst database = firebase.app().database();\r\n\r\nVue.use(EmojiPicker);\r\n$(function () {\r\n  vm = new Vue({\r\n    el: \"#app\",\r\n    data: {\r\n      currentRoute: routeMapping.index,\r\n      inValid: false,\r\n      isMaskOpen: false,\r\n      isMenuOpen: false,\r\n      maskTitle: null,\r\n      controlTransition: {\r\n        enter: '',\r\n        leave: ''\r\n      },\r\n      userData: {\r\n        username: null,\r\n        userdate: null,\r\n        usergender: null,\r\n      },\r\n      inputStatus: {\r\n        getUsername: true,\r\n        getUserdate: false,\r\n        getUsergender: false,\r\n      },\r\n      setUsernameDialogs: [\r\n        {\r\n          target: 'robot',\r\n          text: '歡迎你使用我們的匿名聊天室，該怎麼稱呼你呢?'\r\n        }\r\n      ],\r\n      chatRoomDialogs: {},\r\n      roomList: [],\r\n      newRoomData: {\r\n        name: null,\r\n        description: null,\r\n      },\r\n      currentRoomData: {},\r\n      chatData: {\r\n        search: '',\r\n        input: '',\r\n        imageUrl: '',\r\n      },\r\n    },\r\n    filters: {\r\n      formatTime(timeStamp) {\r\n        const hours = new Date(timeStamp).getHours().toString().padStart(2, 0);\r\n        const minutes = new Date(timeStamp).getMinutes().toString().padStart(2, 0);\r\n        return `${hours} : ${minutes}`;\r\n      },\r\n    },\r\n    watch: {\r\n      currentRoute(val) {\r\n        if (val === routeMapping.chatRoom) {\r\n          this.chatData = {\r\n            search: '',\r\n            input: '',\r\n            imageUrl: '',\r\n          };\r\n          setTimeout(() => {\r\n            this.$refs.chatRoomList.scrollTo(0, this.$refs.chatRoomList.scrollHeight + 500);\r\n          }, 1000);\r\n        }\r\n      }\r\n    },\r\n    methods: {\r\n      initialUserData() {\r\n        this.userData = {\r\n          username: null,\r\n          userdate: null,\r\n          usergender: null,\r\n        };\r\n        this.inputStatus = {\r\n          getUsername: true,\r\n          getUserdate: false,\r\n          getUsergender: false,\r\n        };\r\n        this.setUsernameDialogs = [\r\n          {\r\n            target: 'robot',\r\n            text: '歡迎你使用我們的匿名聊天室，該怎麼稱呼你呢?'\r\n          }\r\n        ];\r\n      },\r\n      validateAndGoRoute(routeNum) {\r\n        if (routeNum === routeMapping.index) {\r\n          this.initialUserData();\r\n        }\r\n        this.changeTransition(routeNum);\r\n        this.currentRoute = routeNum;\r\n      },\r\n      changeTransition(routeNum) {\r\n        // 跳轉前改變 transtion 動態\r\n        if (this.currentRoute < routeNum) {\r\n          this.controlTransition.enter = '';\r\n          this.controlTransition.leave = 'animated slideOutLeft faster';\r\n        } else {\r\n          this.controlTransition.enter = 'animated slideInLeft faster';\r\n          this.controlTransition.leave = '';\r\n        }\r\n      },\r\n      submitUserData(type) {\r\n        switch (type) {\r\n          case 'name':\r\n            if (!this.userData.username) return;\r\n            this.setUsernameDialogs.push({\r\n              target: this.userData.username,\r\n              text: this.userData.username\r\n            });\r\n            this.inputStatus.getUsername = false;\r\n            setTimeout(() => {\r\n              this.setUsernameDialogs.push({\r\n                target: 'robot',\r\n                text: `${this.userData.username}你好~你幾號出生呢！告訴我\u000b方便幫你配對年紀相仿的對象喔~`\r\n              });\r\n              this.inputStatus.getUserdate = true;\r\n            }, 1000);\r\n            break;\r\n          case 'date':\r\n            if (!this.userData.userdate) return;\r\n            this.setUsernameDialogs.push({\r\n              target: this.userData.username,\r\n              text: this.userData.userdate\r\n            });\r\n            this.inputStatus.getUserdate = false;\r\n            setTimeout(() => {\r\n              this.setUsernameDialogs.push({\r\n                target: 'robot',\r\n                text: '好吧!其實我根本不 care 你生日，即使你亂打我也沒差，因為我沒時間寫驗證。欸~那不知道是男是女呢?'\r\n              });\r\n              this.inputStatus.getUsergender = true;\r\n            }, 1000);\r\n            break;\r\n          case 'gender':\r\n            if (!this.userData.usergender) return;\r\n            this.setUsernameDialogs.push({\r\n              target: this.userData.username,\r\n              text: this.userData.usergender\r\n            });\r\n            this.inputStatus.getUsergender = false;\r\n            this.maskTitle = '資料確認完成';\r\n            this.isMaskOpen = true;\r\n            setTimeout(() => {\r\n              this.currentRoute = routeMapping.roomLobby;\r\n              this.isMaskOpen = false;\r\n            }, 2000);\r\n            break;\r\n          default: return;\r\n        }\r\n      },\r\n      showRoomCommentAmount(room) {\r\n        return room.chatData ? Object.keys(room.chatData).length : 0;\r\n      },\r\n      toggleMenu() {\r\n        this.newRoomData = {\r\n          name: null,\r\n        };\r\n        this.isMenuOpen = !this.isMenuOpen;\r\n      },\r\n      goChatRoom(room) {\r\n        this.listenRoomData(room);\r\n        this.currentRoomData.roomId = room.id;\r\n        this.currentRoomData.name = room.name;\r\n        this.changeTransition(routeMapping.chatRoom);\r\n        this.currentRoute = routeMapping.chatRoom;\r\n      },\r\n      createNewRoom() {\r\n        let isAble = true;\r\n        for (let key in this.newRoomData) {\r\n          if (!this.newRoomData[key]) {\r\n            isAble = false;\r\n            break;\r\n          }\r\n        }\r\n        if (!isAble) {\r\n          this.inValid = true;\r\n          setTimeout(() => {\r\n            this.inValid = false;\r\n          }, 3000);\r\n          return;\r\n        } else {\r\n          this.maskTitle = '創建成功';\r\n          this.isMaskOpen = true;\r\n          const roomData = {\r\n            id: `room${new Date().getTime()}`,\r\n            name: this.newRoomData.name,\r\n            description: this.newRoomData.description,\r\n            chatData: {},\r\n          };\r\n          this.writeRoomsData(roomData);\r\n          this.goChatRoom(roomData);\r\n          setTimeout(() => {\r\n            this.isMaskOpen = false;\r\n            this.isMenuOpen = false;\r\n          }, 2000);\r\n        }\r\n      },\r\n      appendEmoji(emoji) {\r\n        this.chatData.input += emoji;\r\n      },\r\n      addChat(type) {\r\n        switch (type) {\r\n          case 'text':\r\n            if (!this.chatData.input) return;\r\n            this.writeRoomData(this.currentRoomData.roomId, {\r\n              target: this.userData.username,\r\n              text: this.chatData.input,\r\n              timeStamp: new Date().getTime(),\r\n              imageUrl: null,\r\n            });\r\n            break;\r\n          case 'imageUrl':\r\n            if (!this.chatData.imageUrl) return;\r\n            this.writeRoomData(this.currentRoomData.roomId, {\r\n              target: this.userData.username,\r\n              text: null,\r\n              timeStamp: new Date().getTime(),\r\n              imageUrl: this.chatData.imageUrl,\r\n            });\r\n            $('#setImageModal').modal('hide');\r\n            break;\r\n          default: return;\r\n        }\r\n        this.chatData = {\r\n          search: '',\r\n          input: '',\r\n          imageUrl: '',\r\n        };\r\n        setTimeout(() => {\r\n          this.$refs.chatRoomList.scrollTo(0, this.$refs.chatRoomList.scrollHeight + 500);\r\n        }, 0);\r\n      },\r\n      listenRoomsData() {\r\n        const roomRef = database.ref();\r\n        roomRef.on('value', (snapshot) => {\r\n          this.roomList = snapshot.val();\r\n        });\r\n      },\r\n      writeRoomsData(roomData) {\r\n        database.ref(roomData.id).set({\r\n          id: roomData.id,\r\n          name: roomData.name,\r\n          description: roomData.description,\r\n          chatData: {},\r\n        });\r\n      },\r\n      listenRoomData(room) {\r\n        const roomRef = database.ref(`${room.id}/chatData`);\r\n        roomRef.on('value', (snapshot) => {\r\n          this.chatRoomDialogs = snapshot.val();\r\n        });\r\n      },\r\n      writeRoomData(room, chatData) {\r\n        database.ref(`${room}/chatData`).push({\r\n          target: chatData.target,\r\n          text: chatData.text,\r\n          timeStamp: chatData.timeStamp,\r\n          imageUrl: chatData.imageUrl,\r\n        });\r\n      }\r\n    },\r\n    created() {\r\n      this.listenRoomsData();\r\n    }\r\n  });\r\n});\r\n"]}