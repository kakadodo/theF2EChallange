{"version":3,"sources":["booking.js"],"names":["vm","window","onload","Vue","data","axios","roomsInfo","roomDetail","bookingStep","time","roomDetailisLoading","booking","submitLoading","pickerOptions","date","getFullYear","isDisabled","Date","getMonth","forEach","getDate","getTime","formBooking","formDate","formDateSeparate","formBookingRule","tel","required","email","type","message","trigger","submitDialogVisible","computed","bookingTotalDates","start","this","i","bookingTotalDays","dates","month","newDay","toString","push","year","bookingTotalPrice","padStart","scrollToRooms","scrollToElement","roomsTitleOffset","scrollY","normalDayPrice","currentScroll","methods","scrollTimer","el","clearInterval","document","querySelector","getBoundingClientRect","top","offsetHeight","setInterval","scrollTo","scrollSpeed","$message","formatToFormDate","tempArr","checkIfSameDate","error","slice","sort","a","b","res","success","setTimeout","concat","_toConsumableArray","showRoomDetail","roomId","_this","showSubmitDialog","then","submitBooking","bodyFormData","_this2","$refs","validate","valid","headers","name","FormData","append","post","room","id","Content-Type","resetFields","resetForm","fixScrollDisappear","resetAllData","watch","val","created","body","style","overflow","baseURL","timeout","Acctept","Authorization","get","_this3","items"],"mappings":"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","file":"booking.js","sourcesContent":["let vm = null;\r\n\r\nwindow.onload = () => {\r\n  vm = new Vue({\r\n    el: '#app',\r\n    data() {\r\n      return {\r\n        axios: null,\r\n        roomsInfo: [],\r\n        roomDetail: [],\r\n        bookingStep: 1,\r\n        roomDetailisLoading: true,\r\n        submitLoading: false,\r\n        pickerOptions: {\r\n          disabledDate(time) {\r\n            const booking = vm.roomDetail.booking;\r\n            let isDisabled = false;\r\n            booking.forEach(date => {\r\n              if (\r\n                time.getFullYear() == new Date(date.date).getFullYear() &&\r\n                time.getMonth() == new Date(date.date).getMonth() &&\r\n                time.getDate() == new Date(date.date).getDate()\r\n              ) {\r\n                isDisabled = true;\r\n              }\r\n            });\r\n            return isDisabled\r\n              ? isDisabled\r\n              : time.getTime() < new Date().getTime() ||\r\n                  time.getTime() >\r\n                    new Date().getTime() + 1000 * 60 * 60 * 24 * 92;\r\n          },\r\n        },\r\n        formBooking: {\r\n          name: '',\r\n          tel: '',\r\n          email: '',\r\n        },\r\n        formDate: null,\r\n        formDateSeparate: [null, null],\r\n        formBookingRule: {\r\n          name: [{ required: true, message: '請輸入姓名', trigger: 'blur' }],\r\n          tel: [{ required: true, message: '請輸入聯絡電話', trigger: 'blur' }],\r\n          email: [\r\n            { required: true, message: '請輸入 email', trigger: 'blur' },\r\n            {\r\n              type: 'email',\r\n              message: '請輸入正確的 email 格式',\r\n              trigger: ['blur', 'change'],\r\n            },\r\n          ],\r\n        },\r\n        submitDialogVisible: false,\r\n      };\r\n    },\r\n    computed: {\r\n      bookingTotalDays() {\r\n        const start = new Date(this.formDate[0]).getTime();\r\n        const end = new Date(this.formDate[1]).getTime();\r\n        const days = (end - start) / 1000 / 60 / 60 / 24;\r\n        return days;\r\n      },\r\n      bookingTotalDates() {\r\n        const start = new Date(this.formDate[0]).getTime();\r\n        let dates = [this.formDate[0]];\r\n        for (let i = 1; i <= this.bookingTotalDays; i++) {\r\n          const dayTime = 1000 * 60 * 60 * 24;\r\n          let newDay = new Date(start + dayTime * i);\r\n          const year = newDay.getFullYear();\r\n          const month = (newDay.getMonth() + 1).toString().padStart(2, 0);\r\n          const date = newDay\r\n            .getDate()\r\n            .toString()\r\n            .padStart(2, 0);\r\n          dates.push(`${year}-${month}-${date}`);\r\n        }\r\n        return dates;\r\n      },\r\n      bookingTotalPrice() {\r\n        return this.formDate\r\n          ? this.roomDetail.room[0].normalDayPrice * this.bookingTotalDays\r\n          : 0;\r\n      },\r\n    },\r\n    methods: {\r\n      scrollToRooms() {\r\n        this.bookingStep = 1;\r\n        this.scrollToElement('.title');\r\n      },\r\n      scrollToElement(el) {\r\n        const roomsTitleOffset =\r\n          document.querySelector(`${el}`).getBoundingClientRect().top -\r\n          document.querySelector('.title').offsetHeight * 2;\r\n        let scrollY = window.scrollY;\r\n        let currentScroll = scrollY;\r\n        let scrollSpeed = 5;\r\n        let scrollTimer = null;\r\n        if (roomsTitleOffset > 0) {\r\n          scrollTimer = setInterval(() => {\r\n            if (currentScroll < roomsTitleOffset + scrollY) {\r\n              window.scrollTo(0, currentScroll);\r\n              currentScroll += scrollSpeed;\r\n            } else {\r\n              clearInterval(scrollTimer);\r\n            }\r\n          }, 0);\r\n        } else {\r\n          scrollTimer = setInterval(() => {\r\n            if (currentScroll > roomsTitleOffset + scrollY) {\r\n              window.scrollTo(0, currentScroll - scrollSpeed);\r\n              currentScroll -= scrollSpeed;\r\n            } else {\r\n              clearInterval(scrollTimer);\r\n            }\r\n          }, 0);\r\n        }\r\n      },\r\n      formatToFormDate() {\r\n        // 將小螢幕的 datePick 值轉換到 formDate\r\n        // 如果開始與結束日沒有輸入完全就直接跳過\r\n        if (!this.formDateSeparate[0] || !this.formDateSeparate[0]) return;\r\n        if (this.formDateSeparate[0] === this.formDateSeparate[1]) {\r\n          this.$message.error('開始及結束日期不能相同');\r\n          this.formDateSeparate = [null, null];\r\n          return;\r\n        }\r\n        // 如果兩個都有輸入就轉換，轉換會把日期順序重新排列\r\n        if (this.formDateSeparate[0] && this.formDateSeparate[1]) {\r\n          let tempArr = this.formDateSeparate.slice().sort((a, b) => {\r\n            const aa = new Date(a).getTime();\r\n            const bb = new Date(b).getTime();\r\n            return aa - bb;\r\n          });\r\n          this.formDateSeparate = tempArr;\r\n          this.formDate = tempArr;\r\n        }\r\n      },\r\n      checkIfSameDate() {\r\n        if (this.formDate[0] === this.formDate[1]) {\r\n          this.$message.error('開始及結束日期不能相同');\r\n          this.formDate = null;\r\n          return;\r\n        }\r\n        this.formDateSeparate = [...this.formDate];\r\n      },\r\n      showRoomDetail(roomId) {\r\n        this.bookingStep = 2;\r\n        this.roomDetailisLoading = true;\r\n        this.axios.get(`/room/${roomId}`).then(res => {\r\n          if (res.data.success) {\r\n            this.roomDetail = res.data;\r\n            this.roomDetailisLoading = false;\r\n            setTimeout(() => {\r\n              this.scrollToElement('.title');\r\n            }, 500);\r\n          }\r\n        });\r\n      },\r\n      showSubmitDialog() {\r\n        if (!this.formDate) {\r\n          this.$message.error('請選擇開始及結束日期');\r\n        } else {\r\n          this.submitDialogVisible = true;\r\n        }\r\n      },\r\n      submitBooking() {\r\n        this.$refs.formBooking.validate(valid => {\r\n          if (valid) {\r\n            this.submitLoading = true;\r\n            const bodyFormData = new FormData();\r\n            bodyFormData.append('name', this.formBooking.name);\r\n            bodyFormData.append('tel', this.formBooking.tel);\r\n            this.bookingTotalDates.forEach((date, i) => {\r\n              bodyFormData.append(`date[${i}]`, date);\r\n            });\r\n            this.axios\r\n              .post(`/room/${this.roomDetail.room[0].id}`, bodyFormData, {\r\n                headers: { 'Content-Type': 'multipart/form-data' },\r\n              })\r\n              .then(res => {\r\n                if (res.data.success) {\r\n                  this.bookingStep = 3;\r\n                  this.submitDialogVisible = false;\r\n                }\r\n              });\r\n          } else {\r\n            return false;\r\n          }\r\n        });\r\n      },\r\n      resetForm() {\r\n        this.submitDialogVisible = false;\r\n        this.$refs.formBooking.resetFields();\r\n      },\r\n      resetAllData() {\r\n        this.formDate = null;\r\n        this.formBooking = {\r\n          name: '',\r\n          tel: '',\r\n          email: '',\r\n        };\r\n        this.formDateSeparate = [null, null];\r\n      },\r\n      fixScrollDisappear() {\r\n        document.body.style.overflow = 'initial';\r\n      },\r\n    },\r\n    watch: {\r\n      bookingStep(val) {\r\n        if (val === 2) {\r\n          this.resetAllData();\r\n        }\r\n      },\r\n    },\r\n    created() {\r\n      this.axios = axios.create({\r\n        baseURL: 'https://challenge.thef2e.com/api/thef2e2019/stage6',\r\n        timeout: 5000,\r\n        headers: {\r\n          Acctept: 'application/json',\r\n          Authorization:\r\n            'Bearer euQEgajjI9dbwkiVreUIsLvRDdKbqDQKAhnj678BLygJKajkPchRzS9COCc',\r\n        },\r\n      });\r\n      this.axios.get('/rooms').then(res => {\r\n        if (res.data.success) {\r\n          this.roomsInfo = res.data.items;\r\n        }\r\n      });\r\n    },\r\n  });\r\n};\r\n"]}