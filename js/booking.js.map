{"version":3,"sources":["booking.js"],"names":["vm","window","onload","Vue","data","axios","roomsInfo","roomDetail","bookingStep","time","roomDetailisLoading","booking","submitLoading","pickerOptions","date","disabledDate","getFullYear","Date","getMonth","isDisabled","getDate","getTime","formBooking","name","email","formDateSeparate","formDate","formBookingRule","message","trigger","tel","required","submitDialogVisible","type","bookingTotalDays","computed","days","start","this","bookingTotalDates","newDay","dayTime","dates","year","month","toString","padStart","bookingTotalPrice","methods","scrollToRooms","room","normalDayPrice","scrollToElement","roomsTitleOffset","scrollY","scrollSpeed","scrollTimer","document","querySelector","el","getBoundingClientRect","top","offsetHeight","setInterval","scrollTo","currentScroll","clearInterval","formatToFormDate","$message","error","tempArr","slice","sort","a","b","checkIfSameDate","showRoomDetail","concat","_toConsumableArray","res","then","setTimeout","_this","showSubmitDialog","submitBooking","_this2","$refs","validate","valid","bodyFormData","FormData","append","forEach","i","id","headers","Content-Type","success","resetForm","resetFields","resetAllData","watch","val","created","_this3","create","baseURL","timeout","get","items"],"mappings":"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","file":"booking.js","sourcesContent":["let vm = null;\r\n\r\nwindow.onload = () => {\r\n  vm = new Vue({\r\n    el: \"#app\",\r\n    data() {\r\n      return {\r\n        axios: null,\r\n        roomsInfo: [],\r\n        roomDetail: [],\r\n        bookingStep: 1,\r\n        roomDetailisLoading: true,\r\n        submitLoading: false,\r\n        pickerOptions: {\r\n          disabledDate(time) {\r\n            const booking = vm.roomDetail.booking;\r\n            let isDisabled = false;\r\n            booking.forEach(date => {\r\n              if (time.getFullYear() == new Date(date.date).getFullYear()\r\n                && time.getMonth() == new Date(date.date).getMonth()\r\n                && time.getDate() == new Date(date.date).getDate()) {\r\n                isDisabled = true;\r\n              }\r\n            });\r\n            return isDisabled ? isDisabled : (time.getTime() < new Date().getTime() || time.getTime() > (new Date().getTime() + 1000 * 60 * 60 * 24 * 92));\r\n          },\r\n        },\r\n        formBooking: {\r\n          name: '',\r\n          tel: '',\r\n          email: '',\r\n        },\r\n        formDate: null,\r\n        formDateSeparate: [null, null],\r\n        formBookingRule: {\r\n          name: [\r\n            { required: true, message: '請輸入姓名', trigger: 'blur' }\r\n          ],\r\n          tel: [\r\n            { required: true, message: '請輸入聯絡電話', trigger: 'blur' },\r\n          ],\r\n          email: [\r\n            { required: true, message: '請輸入 email', trigger: 'blur' },\r\n            { type: 'email', message: '請輸入正確的 email 格式', trigger: ['blur', 'change'] }\r\n          ]\r\n        },\r\n        submitDialogVisible: false,\r\n      }\r\n    },\r\n    computed: {\r\n      bookingTotalDays() {\r\n        const start = new Date(this.formDate[0]).getTime();\r\n        const end = new Date(this.formDate[1]).getTime();\r\n        const days = (end - start) / 1000 / 60 / 60 / 24;\r\n        return days;\r\n      },\r\n      bookingTotalDates() {\r\n        const start = new Date(this.formDate[0]).getTime();\r\n        let dates = [this.formDate[0]];\r\n        for (let i = 1; i <= this.bookingTotalDays; i++) {\r\n          const dayTime = 1000 * 60 * 60 * 24;\r\n          let newDay = new Date(start + (dayTime * i));\r\n          const year = newDay.getFullYear();\r\n          const month = (newDay.getMonth() + 1).toString().padStart(2, 0);\r\n          const date = (newDay.getDate()).toString().padStart(2, 0);\r\n          dates.push(`${year}-${month}-${date}`);\r\n        }\r\n        return dates;\r\n      },\r\n      bookingTotalPrice() {\r\n        return this.formDate ? this.roomDetail.room[0].normalDayPrice * this.bookingTotalDays : 0;\r\n      }\r\n    },\r\n    methods: {\r\n      scrollToRooms() {\r\n        this.bookingStep = 1;\r\n        this.scrollToElement('.title');\r\n      },\r\n      scrollToElement(el) {\r\n        const roomsTitleOffset = document.querySelector(`${el}`).getBoundingClientRect().top - document.querySelector('.title').offsetHeight * 2;\r\n        let scrollY = window.scrollY;\r\n        let currentScroll = scrollY;\r\n        let scrollSpeed = 5;\r\n        let scrollTimer = null;\r\n        if (roomsTitleOffset > 0) {\r\n          scrollTimer = setInterval(() => {\r\n            if (currentScroll < roomsTitleOffset + scrollY) {\r\n              window.scrollTo(0, currentScroll);\r\n              currentScroll += scrollSpeed;\r\n            } else {\r\n              clearInterval(scrollTimer);\r\n            }\r\n          }, 0);\r\n        } else {\r\n          scrollTimer = setInterval(() => {\r\n            if (currentScroll > roomsTitleOffset + scrollY) {\r\n              window.scrollTo(0, currentScroll - scrollSpeed);\r\n              currentScroll -= scrollSpeed;\r\n            } else {\r\n              clearInterval(scrollTimer);\r\n            }\r\n          }, 0);\r\n        }\r\n      },\r\n      formatToFormDate() {\r\n        // 將小螢幕的 datePick 值轉換到 formDate\r\n        // 如果開始與結束日沒有輸入完全就直接跳過\r\n        if (!this.formDateSeparate[0] || !this.formDateSeparate[0]) return;\r\n        if (this.formDateSeparate[0] === this.formDateSeparate[1]) {\r\n          this.$message.error('開始及結束日期不能相同');\r\n          this.formDateSeparate = [null, null];\r\n          return;\r\n        }\r\n        // 如果兩個都有輸入就轉換，轉換會把日期順序重新排列\r\n        if (this.formDateSeparate[0] && this.formDateSeparate[1]) {\r\n          let tempArr = this.formDateSeparate.slice().sort((a, b) => {\r\n            const aa = new Date(a).getTime();\r\n            const bb = new Date(b).getTime();\r\n            return aa - bb;\r\n          });\r\n          this.formDateSeparate = tempArr;\r\n          this.formDate = tempArr;\r\n        }\r\n      },\r\n      checkIfSameDate() {\r\n        if (this.formDate[0] === this.formDate[1]) {\r\n          this.$message.error('開始及結束日期不能相同');\r\n          this.formDate = null;\r\n          return;\r\n        }\r\n        this.formDateSeparate = [...this.formDate];\r\n      },\r\n      showRoomDetail(roomId) {\r\n        this.bookingStep = 2;\r\n        this.roomDetailisLoading = true;\r\n        this.axios.get(`/room/${roomId}`).then((res) => {\r\n          if (res.data.success) {\r\n            this.roomDetail = res.data;\r\n            this.roomDetailisLoading = false;\r\n            setTimeout(() => {\r\n              this.scrollToElement('.title');\r\n            }, 500);\r\n          }\r\n        });\r\n      },\r\n      showSubmitDialog() {\r\n        if (!this.formDate) {\r\n          this.$message.error('請選擇開始及結束日期');\r\n        } else {\r\n          this.submitDialogVisible = true;\r\n        }\r\n      },\r\n      submitBooking() {\r\n        this.$refs.formBooking.validate((valid) => {\r\n          if (valid) {\r\n            this.submitLoading = true;\r\n            const bodyFormData = new FormData();\r\n            bodyFormData.append('name', this.formBooking.name);\r\n            bodyFormData.append('tel', this.formBooking.tel);\r\n            this.bookingTotalDates.forEach((date, i) => {\r\n              bodyFormData.append(`date[${i}]`, date);\r\n            });\r\n            this.axios.post(`/room/${this.roomDetail.room[0].id}`, bodyFormData, {\r\n              headers: { 'Content-Type': 'multipart/form-data' }\r\n            }).then((res) => {\r\n              if (res.data.success) {\r\n                this.bookingStep = 3;\r\n                this.submitDialogVisible = false;\r\n              }\r\n            });\r\n          } else {\r\n            return false;\r\n          }\r\n        });\r\n      },\r\n      resetForm() {\r\n        this.submitDialogVisible = false;\r\n        this.$refs.formBooking.resetFields();\r\n      },\r\n      resetAllData() {\r\n        this.formDate = null;\r\n        this.formBooking = {\r\n          name: '',\r\n          tel: '',\r\n          email: '',\r\n        };\r\n        this.formDateSeparate = [null, null];\r\n      }\r\n    },\r\n    watch: {\r\n      bookingStep(val) {\r\n        if (val === 2) {\r\n          this.resetAllData();\r\n        }\r\n      }\r\n    },\r\n    created() {\r\n      this.axios = axios.create({\r\n        baseURL: 'https://challenge.thef2e.com/api/thef2e2019/stage6',\r\n        timeout: 5000,\r\n        headers: {\r\n          Acctept: 'application/json',\r\n          Authorization: 'Bearer euQEgajjI9dbwkiVreUIsLvRDdKbqDQKAhnj678BLygJKajkPchRzS9COCc',\r\n        }\r\n      });\r\n      this.axios.get('/rooms').then((res) => {\r\n        if (res.data.success) {\r\n          this.roomsInfo = res.data.items;\r\n        }\r\n      });\r\n    },\r\n  });\r\n}\r\n\r\n"]}