{"version":3,"sources":["chatroom.js"],"names":["vm","routeMapping","index","setUserData","firebaseConfig","apiKey","authDomain","firebase","initializeApp","database","app","Vue","$","EmojiPicker","el","data","currentRoute","inValid","isMaskOpen","isMenuOpen","maskTitle","controlTransition","leave","username","userData","usergender","getUsername","inputStatus","getUsergender","setUsernameDialogs","target","chatRoomDialogs","roomList","newRoomData","name","description","currentRoomData","chatData","search","input","imageUrl","filters","formatTime","timeStamp","Date","getHours","toString","padStart","getMinutes","watch","val","_this","this","chatRoom","$refs","chatRoomList","scrollTo","scrollHeight","setTimeout","methods","initialUserData","userdate","getUserdate","validateAndGoRoute","routeNum","changeTransition","enter","submitUserData","type","_this2","push","text","roomLobby","showRoomCommentAmount","room","Object","keys","length","goChatRoom","roomId","id","listenRoomData","createNewRoom","isAble","key","_this3","roomData","getTime","appendEmoji","emoji","addChat","_this4","writeRoomData","_this5","ref","snapshot","writeRoomsData","set","listenRoomsData","roomRef","_this6","created"],"mappings":"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","file":"chatroom.js","sourcesContent":["let vm = null;\r\nconst routeMapping = {\r\n  index: 1,\r\n  setUserData: 2,\r\n  roomLobby: 3,\r\n  chatRoom: 4,\r\n};\r\n// Firebase configuration\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyA4P_r_EK-DXuXETYaSsVybrChSCI25FFs\",\r\n  authDomain: \"chatroom-52faa.firebaseapp.com\",\r\n  databaseURL: \"https://chatroom-52faa.firebaseio.com\",\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\nconst database = firebase.app().database();\r\n\r\nVue.use(EmojiPicker);\r\n$(function () {\r\n  vm = new Vue({\r\n    el: \"#app\",\r\n    data: {\r\n      currentRoute: routeMapping.index,\r\n      inValid: false,\r\n      isMaskOpen: false,\r\n      isMenuOpen: false,\r\n      maskTitle: null,\r\n      controlTransition: {\r\n        enter: '',\r\n        leave: ''\r\n      },\r\n      userData: {\r\n        username: null,\r\n        userdate: null,\r\n        usergender: null,\r\n      },\r\n      inputStatus: {\r\n        getUsername: true,\r\n        getUserdate: false,\r\n        getUsergender: false,\r\n      },\r\n      setUsernameDialogs: [\r\n        {\r\n          target: 'robot',\r\n          text: '歡迎你使用我們的匿名聊天室，該怎麼稱呼你呢?'\r\n        }\r\n      ],\r\n      chatRoomDialogs: {},\r\n      roomList: [],\r\n      newRoomData: {\r\n        name: null,\r\n        description: null,\r\n      },\r\n      currentRoomData: {},\r\n      chatData: {\r\n        search: '',\r\n        input: '',\r\n        imageUrl: '',\r\n      },\r\n    },\r\n    filters: {\r\n      formatTime(timeStamp) {\r\n        const hours = new Date(timeStamp).getHours().toString().padStart(2, 0);\r\n        const minutes = new Date(timeStamp).getMinutes().toString().padStart(2, 0);\r\n        return `${hours} : ${minutes}`;\r\n      },\r\n    },\r\n    watch: {\r\n      currentRoute(val) {\r\n        if (val === routeMapping.chatRoom) {\r\n          this.chatData = {\r\n            search: '',\r\n            input: '',\r\n            imageUrl: '',\r\n          };\r\n          setTimeout(() => {\r\n            this.$refs.chatRoomList.scrollTo(0, this.$refs.chatRoomList.scrollHeight + 500);\r\n          }, 1000);\r\n        }\r\n      }\r\n    },\r\n    methods: {\r\n      initialUserData() {\r\n        this.userData = {\r\n          username: null,\r\n          userdate: null,\r\n          usergender: null,\r\n        };\r\n        this.inputStatus = {\r\n          getUsername: true,\r\n          getUserdate: false,\r\n          getUsergender: false,\r\n        };\r\n        this.setUsernameDialogs = [\r\n          {\r\n            target: 'robot',\r\n            text: '歡迎你使用我們的匿名聊天室，該怎麼稱呼你呢?'\r\n          }\r\n        ];\r\n      },\r\n      validateAndGoRoute(routeNum) {\r\n        if (routeNum === routeMapping.index) {\r\n          this.initialUserData();\r\n        }\r\n        this.changeTransition(routeNum);\r\n        this.currentRoute = routeNum;\r\n      },\r\n      changeTransition(routeNum) {\r\n        // 跳轉前改變 transtion 動態\r\n        if (this.currentRoute < routeNum) {\r\n          this.controlTransition.enter = '';\r\n          this.controlTransition.leave = 'animated slideOutLeft faster';\r\n        } else {\r\n          this.controlTransition.enter = 'animated slideInLeft faster';\r\n          this.controlTransition.leave = '';\r\n        }\r\n      },\r\n      submitUserData(type) {\r\n        switch (type) {\r\n          case 'name':\r\n            if (!this.userData.username) return;\r\n            this.setUsernameDialogs.push({\r\n              target: this.userData.username,\r\n              text: this.userData.username\r\n            });\r\n            this.inputStatus.getUsername = false;\r\n            setTimeout(() => {\r\n              this.setUsernameDialogs.push({\r\n                target: 'robot',\r\n                text: `${this.userData.username}你好~你幾號出生呢！告訴我\u000b方便幫你配對年紀相仿的對象喔~`\r\n              });\r\n              this.inputStatus.getUserdate = true;\r\n            }, 1000);\r\n            break;\r\n          case 'date':\r\n            if (!this.userData.userdate) return;\r\n            this.setUsernameDialogs.push({\r\n              target: this.userData.username,\r\n              text: this.userData.userdate\r\n            });\r\n            this.inputStatus.getUserdate = false;\r\n            setTimeout(() => {\r\n              this.setUsernameDialogs.push({\r\n                target: 'robot',\r\n                text: '好吧!其實我根本不 care 你生日，即使你亂打我也沒差，因為我沒時間寫驗證。欸~那不知道是男是女呢?'\r\n              });\r\n              this.inputStatus.getUsergender = true;\r\n            }, 1000);\r\n            break;\r\n          case 'gender':\r\n            if (!this.userData.usergender) return;\r\n            this.setUsernameDialogs.push({\r\n              target: this.userData.username,\r\n              text: this.userData.usergender\r\n            });\r\n            this.inputStatus.getUsergender = false;\r\n            this.maskTitle = '資料確認完成';\r\n            this.isMaskOpen = true;\r\n            setTimeout(() => {\r\n              this.currentRoute = routeMapping.roomLobby;\r\n              this.isMaskOpen = false;\r\n            }, 2000);\r\n            break;\r\n          default: return;\r\n        }\r\n      },\r\n      showRoomCommentAmount(room) {\r\n        return room.chatData ? Object.keys(room.chatData).length : 0;\r\n      },\r\n      toggleMenu() {\r\n        this.newRoomData = {\r\n          name: null,\r\n        };\r\n        this.isMenuOpen = !this.isMenuOpen;\r\n      },\r\n      goChatRoom(room) {\r\n        this.listenRoomData(room);\r\n        this.currentRoomData.roomId = room.id;\r\n        this.currentRoomData.name = room.name;\r\n        this.changeTransition(routeMapping.chatRoom);\r\n        this.currentRoute = routeMapping.chatRoom;\r\n      },\r\n      createNewRoom() {\r\n        let isAble = true;\r\n        for (let key in this.newRoomData) {\r\n          if (!this.newRoomData[key]) {\r\n            isAble = false;\r\n            break;\r\n          }\r\n        }\r\n        if (!isAble) {\r\n          this.inValid = true;\r\n          setTimeout(() => {\r\n            this.inValid = false;\r\n          }, 3000);\r\n          return;\r\n        } else {\r\n          this.maskTitle = '創建成功';\r\n          this.isMaskOpen = true;\r\n          const roomData = {\r\n            id: `room${new Date().getTime()}`,\r\n            name: this.newRoomData.name,\r\n            description: this.newRoomData.description,\r\n            chatData: {},\r\n          };\r\n          this.writeRoomsData(roomData);\r\n          this.goChatRoom(roomData);\r\n          setTimeout(() => {\r\n            this.isMaskOpen = false;\r\n            this.isMenuOpen = false;\r\n          }, 2000);\r\n        }\r\n      },\r\n      appendEmoji(emoji) {\r\n        this.chatData.input += emoji;\r\n      },\r\n      addChat(type) {\r\n        switch (type) {\r\n          case 'text':\r\n            if (!this.chatData.input) return;\r\n            this.writeRoomData(this.currentRoomData.roomId, {\r\n              target: this.userData.username,\r\n              text: this.chatData.input,\r\n              timeStamp: new Date().getTime(),\r\n              imageUrl: null,\r\n            });\r\n            break;\r\n          case 'imageUrl':\r\n            if (!this.chatData.imageUrl) return;\r\n            this.writeRoomData(this.currentRoomData.roomId, {\r\n              target: this.userData.username,\r\n              text: null,\r\n              timeStamp: new Date().getTime(),\r\n              imageUrl: this.chatData.imageUrl,\r\n            });\r\n            $('#setImageModal').modal('hide');\r\n            break;\r\n          default: return;\r\n        }\r\n        this.chatData = {\r\n          search: '',\r\n          input: '',\r\n          imageUrl: '',\r\n        };\r\n        setTimeout(() => {\r\n          this.$refs.chatRoomList.scrollTo(0, this.$refs.chatRoomList.scrollHeight + 500);\r\n        }, 0);\r\n      },\r\n      listenRoomsData() {\r\n        const roomRef = database.ref();\r\n        roomRef.on('value', (snapshot) => {\r\n          this.roomList = snapshot.val();\r\n        });\r\n      },\r\n      writeRoomsData(roomData) {\r\n        database.ref(roomData.id).set({\r\n          id: roomData.id,\r\n          name: roomData.name,\r\n          description: roomData.description,\r\n          chatData: {},\r\n        });\r\n      },\r\n      listenRoomData(room) {\r\n        const roomRef = database.ref(`${room.id}/chatData`);\r\n        roomRef.on('value', (snapshot) => {\r\n          this.chatRoomDialogs = snapshot.val();\r\n        });\r\n      },\r\n      writeRoomData(room, chatData) {\r\n        database.ref(`${room}/chatData`).push({\r\n          target: chatData.target,\r\n          text: chatData.text,\r\n          timeStamp: chatData.timeStamp,\r\n          imageUrl: chatData.imageUrl,\r\n        });\r\n      }\r\n    },\r\n    created() {\r\n      this.listenRoomsData();\r\n    }\r\n  });\r\n});\r\n"]}