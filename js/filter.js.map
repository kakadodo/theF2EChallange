{"version":3,"sources":["filter.js"],"names":["$","API","Vue","el","data","vm","loading","listsData","pageData","pagination","currentPage","filterMode","filterData","filterInputData","LocName","City","AvailableTime","modalLocName","filterOpen","googleMap","map","computed","showPages","min","this","Math","floor","max","pageRange","ceil","length","filter","page","i","getCity","list","List","Value","city","arr","indexOf","citys","parse","inputCity","district","forEach","JSON","getDistrict","push","District","dist","methods","getAPIData","axios","get","then","response","combineDataByPages","catch","error","stringify","alert","dataCopy","parseInt","pageCount","splice","movePage","move","showMap","pos","lat","Latitude","lng","Longitude","address","Address","replace","content","icon","zoom","google","maps","Map","document","getElementById","center","Marker","animation","infowindow","Animation","InfoWindow","filterLists","open","marker","_this2","_loop","key","tempData","toLowerCase","watch","filterInputData.LocName","val","debounce","filterInputData.City","filterInputData.AvailableTime","oldVal","created","mounted"],"mappings":"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","file":"filter.js","sourcesContent":["$(function(){\r\n  let API = 'https://wapi.gogoro.com/tw/api/vm/list';\r\n\r\n  const vm = new Vue({\r\n    el:'#app',\r\n    data:{\r\n      loading: true,\r\n      listsData:[],\r\n      pageData:[],\r\n      pagination:[],\r\n      currentPage:1,\r\n      filterMode: false,\r\n      filterData:[],\r\n      filterInputData:{\r\n        LocName:'',\r\n        City:'',\r\n        District:'',\r\n        AvailableTime: false\r\n      },\r\n      filterOpen:false,\r\n      modalLocName:'',\r\n      googleMap:{\r\n        map:{},\r\n        marker:{},\r\n        infowindow:{}\r\n      }\r\n    },\r\n    computed:{\r\n      showPages(){\r\n        //依 currentPage 決定當前的頁數範圍\r\n        let pageRange = {\r\n          min: this.currentPage % 10 == 0 ? (this.currentPage - 9) : (Math.floor(this.currentPage / 10) * 10 + 1),\r\n          max: this.currentPage % 10 == 0 ? this.currentPage : Math.ceil(this.currentPage / 10) * 10\r\n        };\r\n        // max 計算超過 pagination 總長度的話，max 就改為總長度\r\n        if(pageRange.max > this.pagination.length) pageRange.max = this.pagination.length;\r\n        return this.pagination.filter((page,i)=>{return page >= pageRange.min-1 && page <= pageRange.max-1});\r\n      },\r\n      getCity(){\r\n        const citys = this.listsData.map((list,i)=> JSON.parse(list.City).List[1].Value);\r\n        return citys.filter((city,i,arr)=> arr.indexOf(city) == i);\r\n      },\r\n      getDistrict(){\r\n        const inputCity = this.filterInputData.City;\r\n        if(inputCity==''){\r\n          return '';\r\n        }else{\r\n          const district = [];\r\n          this.listsData.forEach((list,i)=>{\r\n            if(JSON.parse(list.City).List[1].Value == inputCity){\r\n              district.push(JSON.parse(list.District).List[1].Value);\r\n            }else{\r\n              return;\r\n            }\r\n          });\r\n          return district.filter((dist,i,arr)=> arr.indexOf(dist) == i);\r\n        }\r\n      }\r\n    },\r\n    methods:{\r\n      getAPIData(){\r\n        axios.get(API)\r\n        .then(function (response) {\r\n          vm.listsData = response.data.data;\r\n          // console.log(vm.listsData);\r\n          vm.combineDataByPages();\r\n\r\n        })\r\n        .catch(function (error) {\r\n          alert('資料載入有誤，請稍後再試! error: '+ error);\r\n        });\r\n      },\r\n      combineDataByPages(){\r\n        //複製一份原始資料\r\n        const dataCopy = JSON.parse(JSON.stringify(vm.listsData));\r\n        //需要render的總頁數 31頁\r\n        const pageCount = dataCopy.length%20 == 0? (dataCopy.length/20) : parseInt(dataCopy.length/20)+1;\r\n        //重組成以頁數區分的資料，1頁20筆\r\n        for(let i=0; i<pageCount; i++){\r\n          this.pageData.push(dataCopy.splice(0,20));\r\n          vm.pagination.push(i);\r\n        }\r\n        this.loading = false;\r\n      },\r\n      movePage(move){\r\n        if(move == 'prev'){\r\n          this.currentPage--;\r\n        }else if(move == 'next'){\r\n          this.currentPage++;\r\n        }else{\r\n          this.currentPage = parseInt(move);\r\n        }\r\n      },\r\n      showMap(data){\r\n        this.modalLocName = JSON.parse(data.LocName).List[1].Value;\r\n        const _this = this;\r\n        const pos = {lat: data.Latitude, lng: data.Longitude};\r\n        const icon = 'https://raw.githubusercontent.com/kakadodo/theF2EChallange/gh-pages/img/week2/battery-icon.png';\r\n        const address = JSON.parse(data.Address).List[1].Value.replace(/\\(.+\\)/g,'');\r\n        const content = `\r\n          <div>\r\n            <h5>${JSON.parse(data.LocName).List[1].Value}</h5>\r\n            <p>\r\n              <a href='https://www.google.com/maps/place/${address}' target='_blank'>\r\n                ${JSON.parse(data.Address).List[1].Value}\r\n              </a>\r\n            </p>\r\n          </div>\r\n        `;\r\n        this.googleMap.map = new google.maps.Map(document.getElementById('map'), {\r\n          center: pos,\r\n          zoom: 15\r\n        });\r\n        this.googleMap.marker = new google.maps.Marker({\r\n          position: pos,\r\n          map: _this.googleMap.map,\r\n          icon: icon,\r\n          animation: google.maps.Animation.DROP,\r\n        });\r\n        this.googleMap.infowindow = new google.maps.InfoWindow({\r\n          content: content,\r\n        });\r\n        this.googleMap.infowindow.open(this.googleMap.map, this.googleMap.marker);\r\n      },\r\n      filterLists(){\r\n        //判斷是否為 filter mode\r\n        if(this.filterInputData.LocName == '' && this.filterInputData.City == '' && this.filterInputData.District == '' && this.filterInputData.AvailableTime == false){\r\n          this.filterMode = false;\r\n        }else{\r\n          this.filterMode = true;\r\n        }\r\n        let tempData = JSON.parse(JSON.stringify(this.listsData));\r\n        for(let key in this.filterInputData){\r\n          //檢查 LocName、City、District\r\n          if(this.filterInputData[key]!=='' && key !== 'AvailableTime'){\r\n            tempData = tempData.filter((list,i)=>{\r\n              if(key == 'LocName'){\r\n                return (JSON.parse(list[key]).List[1].Value).toLowerCase().indexOf((this.filterInputData[key]).toLowerCase())!== -1;\r\n              }else{\r\n                return JSON.parse(list[key]).List[1].Value == this.filterInputData[key];\r\n              }\r\n            });\r\n          }\r\n          //檢查 AvailableTime\r\n          if(key == 'AvailableTime' && this.filterInputData[key]){\r\n            tempData = tempData.filter((list,i)=>{\r\n              return list[key] == '24HR';\r\n            });\r\n          }\r\n        }\r\n        //將篩選後的結果篩回 filterData\r\n        this.filterData = tempData.filter((list,i)=>{\r\n          return true;\r\n        });\r\n      }\r\n    },\r\n    watch:{\r\n      'filterInputData.LocName':function(val){\r\n        this.debounce(val);\r\n      },\r\n      'filterInputData.City':function(val){\r\n        this.filterInputData.District = '';\r\n        vm.filterLists();\r\n      },\r\n      'filterInputData.AvailableTime':function(val,oldVal){\r\n        if(val !== oldVal) vm.filterLists();\r\n      }\r\n    },\r\n    created(){\r\n      //定義 underscore debounce 讓 vue 使用\r\n      this.debounce = _.debounce(this.filterLists,500);\r\n    },\r\n    mounted(){\r\n      this.getAPIData();\r\n    }\r\n  });\r\n});"]}