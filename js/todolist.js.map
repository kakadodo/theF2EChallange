{"version":3,"sources":["todolist.js"],"names":["$","mode","newTaskCount","parseInt","localStorage","getItem","JSON","parse","items","getTaskContent","btn","panel","closest","data","tasksSort","undefined","task","title","find","val","date","setItem","stringify","file","files","fileTime","text","comment","isStar","prop","isCompleted","time","id","i","tasksData","push","renderTask","taskIndex","leftTaskCount","template","hide","name","html","filter","click","show","on","removeClass","this","addClass","taskLists","not","fadeOut","next","slideDown","prev","e","stopPropagation","info","Date","preventDefault","removeAttr","slideUp","siblings","indexOf","is","sortIndex","unshift","splice","opacity","get"],"mappings":"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","file":"todolist.js","sourcesContent":["$(function(){\r\n  let mode = 'all';\r\n  let newTaskCount = parseInt(localStorage.getItem('newTaskCount')) || 0;\r\n  let tasksData = JSON.parse(localStorage.getItem('data')) || [];\r\n  let tasksSort = JSON.parse(localStorage.getItem('sort')) || [];\r\n\r\n  //header mode toggle\r\n  $('header .nav_list').on('click', function(){\r\n    $('header .nav_list').removeClass('active');\r\n    $(this).addClass('active');\r\n    mode = $(this).data('mode');\r\n    const taskLists = $('.task_lists .task_panel');\r\n    switch(mode){\r\n      case 'all':\r\n        taskLists.show('fast');\r\n        break;\r\n      case 'progress':\r\n        taskLists.show();\r\n        taskLists.filter('.completed').hide('fast');\r\n        break;\r\n      case 'completed':\r\n        taskLists.show();\r\n        taskLists.not('.completed').hide('fast');\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  });\r\n\r\n  //open add new task panel\r\n  $('.addTask_input').on('click', function(){\r\n    $(this).fadeOut(50);\r\n    $(this).next('.task_panel').slideDown('slow');\r\n  });\r\n\r\n  //cancel add new task panel\r\n  $('.btn_cancel').on('click', function(){\r\n    $(this).closest('.task_panel').find('input, textarea').val('');\r\n    $(this).closest('.task_panel').find('.file_info').addClass('d_none');\r\n    $(this).closest('.task_panel').hide().prev('.addTask_input').show();\r\n  });\r\n\r\n  //input file onchange listener\r\n  $('.container').on('change', '[id^=task_file]', function(e){\r\n    e.stopPropagation();\r\n    let file = $(this)[0].files[0];\r\n    let info = $(this).closest('.d_flex').find('.file_info');\r\n    info.removeClass('d_none').find('.name').text(file.name);\r\n    info.find('.upload').text((new Date()).toDateString());\r\n  });\r\n\r\n  //add new task\r\n  $('#js_addTask').on('click', function(){\r\n    getTaskContent($(this));\r\n    $(this).closest('.task_panel').find('input, textarea').val('');\r\n    $(this).closest('.task_panel').find('.file_info').addClass('d_none');\r\n    $(this).closest('.task_panel').hide().prev('.addTask_input').show();\r\n    //keep task id increase\r\n    newTaskCount++;\r\n    localStorage.setItem('newTaskCount',newTaskCount);\r\n  });\r\n\r\n  //edit task\r\n  $('.task_lists').on('click', '.edit_btn', function(e){\r\n    e.preventDefault();\r\n    $(this).addClass('active').closest('.task_panel').find('.task_panel_bottom').slideDown().removeClass('d_none');\r\n    $(this).siblings('.title_input').removeAttr('disabled');\r\n  });\r\n\r\n  //cancel edit task\r\n  $('.task_lists').on('click', '.btn_cancel', function(){\r\n    $(this).closest('.task_panel_bottom').slideUp().addClass('d_none').prev('.task_panel_top').find('.edit_btn').removeClass('active').siblings('.title_input').prop('disabled',true);\r\n  });\r\n\r\n  //save edit task\r\n  $('.task_lists').on('click', '[id^=\"js_saveTask\"]', function(){\r\n    getTaskContent($(this));\r\n    $(this).closest('.task_panel_bottom').slideUp().addClass('d_none').prev('.task_panel_top').find('.edit_btn').removeClass('active').siblings('.title_input').prop('disabled',true);\r\n  });\r\n\r\n  //task completed check listener\r\n  $('.task_lists').on('click', '.completed_check', function(){\r\n    //find task by task id, then use task to find the position of taskData\r\n    let id = $(this).closest('.task_panel').data('id');\r\n    let task = tasksData.find(function(task, i){return task.id == id;});\r\n    let taskIndex = tasksData.indexOf(task);\r\n    $(this).is('.checked')? tasksData[taskIndex].isCompleted = false:tasksData[taskIndex].isCompleted = true;\r\n    $(this).is('.checked')? $(this).removeClass('checked'):$(this).addClass('checked');\r\n    localStorage.setItem('data', JSON.stringify(tasksData));\r\n    renderTask();\r\n  });\r\n\r\n  //task star check listener\r\n  $('.task_lists').on('click', '.star_check', function(){\r\n    let id = $(this).closest('.task_panel').data('id');\r\n    let sortIndex = tasksSort.indexOf(id);\r\n    let task = tasksData.find(function(task, i){return task.id == id;});\r\n    let taskIndex = tasksData.indexOf(task);\r\n    $(this).is('.checked')? tasksData[taskIndex].isStar = false:tasksData[taskIndex].isStar = true;\r\n    $(this).is('.checked')? $(this).removeClass('checked'):$(this).addClass('checked');\r\n    //let stared task move to top\r\n    if($(this).is('.checked')){\r\n      tasksSort.unshift(tasksSort.splice(sortIndex,1)[0]);\r\n      localStorage.setItem('sort', JSON.stringify(tasksSort));\r\n    }\r\n    localStorage.setItem('data', JSON.stringify(tasksData));  \r\n    renderTask();\r\n  });\r\n\r\n  //task delete listener\r\n  $('.task_lists').on('click', '.delete_btn', function(){\r\n    let id = $(this).closest('.task_panel').data('id');\r\n    let task = tasksData.find(function(task, i){return task.id == id;});\r\n    let taskIndex = tasksData.indexOf(task);\r\n    //delete task from taskData\r\n    tasksData.splice(taskIndex,1);\r\n    localStorage.setItem('data', JSON.stringify(tasksData));\r\n    let sortIndex = tasksSort.indexOf(id);\r\n    //delete task id from taskSort\r\n    tasksSort.splice(sortIndex,1);\r\n    localStorage.setItem('sort', JSON.stringify(tasksSort));\r\n    $(this).closest('.task_panel').fadeOut(function(){renderTask();});\r\n  });\r\n\r\n  //sortable tasklists\r\n  $(\".task_lists\").sortable({\r\n    opacity: 0.5,\r\n    items: \".task_panel:not(.star)\"\r\n  });\r\n  $(\".task_lists\").on(\"sortupdate\", function(){\r\n    tasksSort = $(this).find('.task_panel').map(function(i,task){\r\n      return $(task).data('id');\r\n    }).get();\r\n    localStorage.setItem('sort', JSON.stringify(tasksSort));\r\n  });\r\n\r\n\r\n  function getTaskContent(btn){\r\n    let panel = btn.closest('.task_panel');\r\n    let data = {\r\n      id: panel.data('id') === undefined? newTaskCount:panel.data('id'),\r\n      title: panel.find('.title_input').val(),\r\n      date: panel.find('[name=\"task_date\"]').val(),\r\n      time: panel.find('[name=\"task_time\"]').val(),\r\n      file: panel.find('[name=\"task_file\"]')[0].files[0] || '',\r\n      fileTime: panel.find('.file_info .upload').text() || '',\r\n      comment: panel.find('[name=\"task_comment\"]').val(),\r\n      isStar: panel.find('[name=\"completed_check\"]').prop('checked'),\r\n      isCompleted: panel.find('[name=\"star_check\"]').prop('checked')\r\n    }\r\n    // console.log(data);\r\n    //if add task...\r\n    if(data.id == newTaskCount){\r\n      tasksData.push(data);\r\n      tasksSort.push(data.id);\r\n    }else{\r\n      //if update task...\r\n      let task = tasksData.find(function(task,i){\r\n        return task.id == data.id;\r\n      });\r\n      let taskIndex = tasksData.indexOf(task);\r\n      tasksData[taskIndex] = data;\r\n    }\r\n    localStorage.setItem('data', JSON.stringify(tasksData));\r\n    localStorage.setItem('sort', JSON.stringify(tasksSort));\r\n    renderTask();\r\n  }\r\n\r\n  function renderTask(){\r\n    let template = '';\r\n    let leftTaskCount = 0;\r\n    $.each(tasksSort, function(i, id){\r\n      let task = tasksData.find(function(task, i){\r\n        return task.id == id;\r\n      });\r\n      if(!task.isCompleted){\r\n        leftTaskCount++;\r\n      }\r\n      template += `\r\n        <div data-id=\"${task.id}\" class=\"task_panel ${task.isStar? 'star': ''} ${task.isCompleted? 'completed': ''}\">\r\n          <a href=\"#\" class=\"delete_btn\"><i class=\"fas fa-trash-alt\"></i></a>\r\n          <div class=\"task_panel_top\">\r\n            <div class=\"d_flex\">\r\n              <input type=\"checkbox\" name=\"completed_check\" class=\"completed_check ${task.isCompleted? 'checked':''}\"/>\r\n              <input type=\"text\" placeholder=\"Type Something Here...\" name=\"title_input\" disabled=\"true\" value=\"${task.title}\" class=\"title_input\"/>\r\n              <input type=\"checkbox\" name=\"star_check\" class=\"star_check ${task.isStar? 'checked':''}\"/><a href=\"#\" class=\"edit_btn\"><i class=\"fas fa-pencil-alt\"></i></a>\r\n            </div>\r\n            <div class=\"task_icons d_flex\">\r\n              <li class=\"icon_date ${task.date? '':'d_none'}\"><i class=\"far fa-calendar-alt\"></i><span style=\"margin-left:5px\">${task.date}</span></li>\r\n              <li class=\"icon_file ml-1 ${task.file? '':'d_none'}\"><i class=\"far fa-file\"></i></li>\r\n              <li class=\"icon_comment ml-1 ${task.comment? '':'d_none'}\"><i class=\"far fa-comment-dots\"></i></li>\r\n            </div>\r\n          </div>\r\n          <div class=\"task_panel_bottom d_none\">\r\n            <div class=\"form_group\">\r\n              <h4><i class=\"far fa-calendar-alt\"></i>Deadline</h4>\r\n              <input type=\"date\" placeholder=\"yyyy/mm/dd\" name=\"task_date\" class=\"ml-1\" value=\"${task.date}\"/>\r\n              <input type=\"time\" placeholder=\"hh:mm\" style=\"margin-left:5px\" name=\"task_time\" value=\"${task.time}\"/>\r\n            </div>\r\n            <div class=\"form_group\">\r\n              <h4><i class=\"far fa-file\"></i>File</h4>\r\n              <div class=\"d_flex\">\r\n                <div class=\"file_info ml-1 ${task.file? '':'d_none'}\">\r\n                  <p class=\"name\">${task.file? task.file.name:''}</p>\r\n                  <p class=\"upload\">${task.file? task.fileTime:''}</p>\r\n                </div>\r\n                <label for=\"task_file${task.id}\" class=\"file_btn ml-1\">\r\n                  <input id=\"task_file${task.id}\" type=\"file\" name=\"task_file\" hidden=\"hidden\"/>\r\n                </label>\r\n              </div>\r\n            </div>\r\n            <div class=\"form_group\">\r\n              <h4><i class=\"far fa-comment-dots\"></i>Comment</h4>\r\n              <textarea name=\"task_comment\" rows=\"6\" placeholder=\"Type Your Memo Here...\" class=\"ml-1\">${task.comment}</textarea>\r\n            </div>\r\n            <div class=\"button_group\">\r\n              <button class=\"btn_cancel\">X Cancel</button>\r\n              <button id=\"js_saveTask${task.id}\" class=\"btn_primary\">+ Save</button>\r\n            </div>\r\n          </div>\r\n        </div>`;\r\n    });\r\n    $('.task_lists').html(template).hide();\r\n    $('.task_left_info').html(leftTaskCount+' tasks left');\r\n    //check mode to display\r\n    $('header .nav_list').filter('.active').click();\r\n    $('.task_lists').show();\r\n  }\r\n\r\n  renderTask();\r\n});"]}