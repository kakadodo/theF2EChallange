{"version":3,"sources":["filter.js"],"names":["$","vm","Vue","el","data","API","loading","listsData","pageData","pagination","currentPage","filterMode","filterData","LocName","City","District","map","filterOpen","modalLocName","marker","infowindow","pageRange","computed","this","Math","floor","showPages","ceil","max","min","length","filter","page","i","getCity","arr","indexOf","city","getDistrict","inputCity","filterInputData","citys","district","list","push","dist","methods","axios","get","then","response","Data","combineDataByPages","catch","error","alert","dataCopy","parseInt","pageCount","splice","movePage","move","pos","Latitude","lng","Longitude","address","Address","replace","content","_this","googleMap","google","maps","Map","document","getElementById","center","zoom","Marker","position","icon","animation","Animation","DROP","InfoWindow","open","filterLists","_this2","_loop","key","tempData","toLowerCase","parse","JSON","stringify","watch","filterInputData.LocName","val","filterInputData.City","created","debounce","_","getAPIData"],"mappings":"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","file":"filter.js","sourcesContent":["$(function(){\r\n  let API = 'https://official-site-pro.gogoroapp.com/PartnerService/Gogoro/GetVmList?offset=0&pageSize=10000';\r\n\r\n  const vm = new Vue({\r\n    el:'#app',\r\n    data:{\r\n      loading: true,\r\n      listsData:[],\r\n      pageData:[],\r\n      pagination:[],\r\n      currentPage:1,\r\n      filterMode: false,\r\n      filterData:[],\r\n      filterInputData:{\r\n        LocName:'',\r\n        City:'',\r\n        District:'',\r\n      },\r\n      filterOpen:false,\r\n      modalLocName:'',\r\n      googleMap:{\r\n        map:{},\r\n        marker:{},\r\n        infowindow:{}\r\n      }\r\n    },\r\n    computed:{\r\n      showPages(){\r\n        //依 currentPage 決定當前的頁數範圍\r\n        let pageRange = {\r\n          min: this.currentPage % 10 == 0 ? (this.currentPage - 9) : (Math.floor(this.currentPage / 10) * 10 + 1),\r\n          max: this.currentPage % 10 == 0 ? this.currentPage : Math.ceil(this.currentPage / 10) * 10\r\n        };\r\n        // max 計算超過 pagination 總長度的話，max 就改為總長度\r\n        if(pageRange.max > this.pagination.length) pageRange.max = this.pagination.length;\r\n        return this.pagination.filter((page,i)=>{return page >= pageRange.min-1 && page <= pageRange.max-1});\r\n      },\r\n      getCity(){\r\n        const citys = this.listsData.map((list,i)=> list.City['zh-TW']);\r\n        return citys.filter((city,i,arr)=> arr.indexOf(city) == i);\r\n      },\r\n      getDistrict(){\r\n        const inputCity = this.filterInputData.City;\r\n        if(inputCity==''){\r\n          return '';\r\n        }else{\r\n          const district = [];\r\n          this.listsData.forEach((list,i)=>{\r\n            if(list.City['zh-TW'] == inputCity){\r\n              district.push(list.District['zh-TW']);\r\n            }else{\r\n              return;\r\n            }\r\n          });\r\n          return district.filter((dist,i,arr)=> arr.indexOf(dist) == i);\r\n        }\r\n      }\r\n    },\r\n    methods:{\r\n      getAPIData(){\r\n        axios.get(API)\r\n        .then(function (response) {\r\n          vm.listsData = response.data.Data;\r\n          vm.combineDataByPages();\r\n\r\n        })\r\n        .catch(function (error) {\r\n          alert('資料載入有誤，請稍後再試! error: '+ error);\r\n        });\r\n      },\r\n      combineDataByPages(){\r\n        //複製一份原始資料\r\n        const dataCopy = [...this.listsData];\r\n        //需要render的總頁數 31頁\r\n        const pageCount = dataCopy.length%20 == 0? (dataCopy.length/20) : parseInt(dataCopy.length/20)+1;\r\n        //重組成以頁數區分的資料，1頁20筆\r\n        for(let i=0; i<pageCount; i++){\r\n          this.pageData.push(dataCopy.splice(0,20));\r\n          this.pagination.push(i);\r\n        }\r\n        // console.log(this.pageData);\r\n        this.loading = false;\r\n      },\r\n      movePage(move){\r\n        if(move == 'prev'){\r\n          this.currentPage--;\r\n        }else if(move == 'next'){\r\n          this.currentPage++;\r\n        }else{\r\n          this.currentPage = parseInt(move);\r\n        }\r\n      },\r\n      showMap(data){\r\n        this.modalLocName = data.LocName['zh-TW'];\r\n        const _this = this;\r\n        const pos = {lat: data.Latitude, lng: data.Longitude};\r\n        const icon = 'https://raw.githubusercontent.com/kakadodo/theF2EChallange/gh-pages/img/week2/battery-icon.png';\r\n        const address = data.Address['zh-TW'].replace(/\\(.+\\)/g,'');\r\n        const content = `\r\n          <div>\r\n            <h5>${data.LocName['zh-TW']}</h5>\r\n            <p>\r\n              <a href='https://www.google.com/maps/place/${address}' target='_blank'>\r\n                ${data.Address['zh-TW']}\r\n              </a>\r\n            </p>\r\n          </div>\r\n        `;\r\n        this.googleMap.map = new google.maps.Map(document.getElementById('map'), {\r\n          center: pos,\r\n          zoom: 15\r\n        });\r\n        this.googleMap.marker = new google.maps.Marker({\r\n          position: pos,\r\n          map: _this.googleMap.map,\r\n          icon: icon,\r\n          animation: google.maps.Animation.DROP,\r\n        });\r\n        this.googleMap.infowindow = new google.maps.InfoWindow({\r\n          content: content,\r\n        });\r\n        this.googleMap.infowindow.open(this.googleMap.map, this.googleMap.marker);\r\n      },\r\n      filterLists(){\r\n        //判斷是否為 filter mode\r\n        if(this.filterInputData.LocName == '' && this.filterInputData.City == '' && this.filterInputData.District == ''){\r\n          this.filterMode = false;\r\n        }else{\r\n          this.filterMode = true;\r\n        }\r\n        let tempData = JSON.parse(JSON.stringify(this.listsData));\r\n        for(let key in this.filterInputData){\r\n          //檢查 LocName、City、District\r\n          if(this.filterInputData[key]!==''){\r\n            tempData = tempData.filter((list,i)=>{\r\n              if(key == 'LocName'){\r\n                return list[key]['zh-TW'].toLowerCase().indexOf((this.filterInputData[key]).toLowerCase())!== -1;\r\n              }else{\r\n                return list[key]['zh-TW'] == this.filterInputData[key];\r\n              }\r\n            });\r\n          }\r\n        }\r\n        //將篩選後的結果篩回 filterData\r\n        this.filterData = tempData.filter((list,i)=>{\r\n          return true;\r\n        });\r\n      }\r\n    },\r\n    watch:{\r\n      'filterInputData.LocName':function(val){\r\n        this.debounce(val);\r\n      },\r\n      'filterInputData.City':function(val){\r\n        this.filterInputData.District = '';\r\n        vm.filterLists();\r\n      },\r\n    },\r\n    created(){\r\n      //定義 underscore debounce 讓 vue 使用\r\n      this.debounce = _.debounce(this.filterLists,500);\r\n    },\r\n    mounted(){\r\n      this.getAPIData();\r\n    }\r\n  });\r\n});"]}